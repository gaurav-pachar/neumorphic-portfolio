//import Button from "elements/Button";
import axios from "axios";
import NavBar from "components/navBa/NavBar";
import Head from 'next/head'
import React from "react";
import { FaPhoneAlt, FaLinkedin, FaGithub, FaTwitter, FaCircleNotch } from "react-icons/fa";
import { IoMail, IoSend } from "react-icons/io5";
import ClassNames from "Utils/ClassNames";
const contactInfo = [
  {
    name: "Phone Number",
    value: "+91-9818496944",
    icon: <FaPhoneAlt className="h-6 w-6 flex-shrink-0 text-gray-500" aria-hidden="true" />
  },
  {
    name: "Email",
    value: "gaurav.pachar@gmail.com",
    icon: <IoMail className="h-6 w-6 flex-shrink-0 text-gray-500" aria-hidden="true" />
  }
]
const socialLinks = [
  {
    name: "LinkedIn",
    url: 'https://www.linkedin.com/in/gaurav-p-64b97b1bb/',
    icon: <FaLinkedin className="h-8 w-8 transition-all ease-in-out duration-700 hover:scale-125 hover:drop-shadow-xl text-gray-500 hover:text-blue-600"/>
  },
  {
    name: "GitHub",
    url: "https://github.com/gaurav-pachar",
    icon: <FaGithub className="h-8 w-8 transition-all ease-in-out duration-700 hover:scale-125 hover:drop-shadow-xl text-gray-500 hover:text-black"/>
  },
  {
    name: "Twitter",
    url: "https://twitter.com/GauravPachar",
    icon: <FaTwitter className="h-8 w-8 transition-all ease-in-out duration-700 hover:scale-125 hover:drop-shadow-xl text-gray-500 hover:text-blue-500"/>
  }
]
export default function Contact({props}) {

  const contactFormRef = React.useRef();
  const [loading, setloading] = React.useState(false);

  const onFormSubmit = async (e) => {
        setloading(true);
        e.preventDefault();
        const data = new FormData(contactFormRef.current);
        const value = Object.fromEntries(data.entries());
        console.log(value);
        axios.post('https://formspree.io/f/moqzvvyd', {
          name: value.name,
          email: value.email,
          message: value.message
        }).then((res) => {
              console.log(res);
              setloading(false);
              contactFormRef.current.reset();
         }).catch((err) => {
              console.log(err);
              setloading(false);
         })
  }
    return (
    <>
      <Head>
        <title>Contact Me</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-primary h-screen flex items-center">
        <NavBar page="contactPage"/>
        <div className="m-auto py-4 px-4 sm:py-24 sm:px-6 lg:px-8 w-full">
          <div className="relative bg-primary shadow-protruding rounded-xl mt-32 lg:mt-0">
            <h2 className="sr-only">Contact us</h2>
            <div className="grid grid-cols-1 lg:grid-cols-3">
            {/* Contact information */}
            <div className="relative overflow-hidden rounded-xl shadow-protruding bg-primary py-10 px-6 sm:px-10 xl:p-12 tracking-wider antialiased">
              <h3 className="text-lg font-medium text-gray-500">Contact information</h3>
              <dl className="mt-8 space-y-6">
                {contactInfo.map((item) => {
                  return (
                    <div key={item.value}>
                    <dt>
                       <span className="sr-only">{item.name}</span>
                    </dt>
                    <dd className="flex text-base items-center text-gray-500">
                      {item.icon}
                      <span className="ml-3">{item.value}</span>
                    </dd>
                    </div>
                  )
                })}
              </dl>
              <ul role="list" className="mt-8 flex space-x-12">
                 {socialLinks.map((item) => {
                  return (
                    <li key={item.name}>
                       <a className="" href={item.url} target="_blank" rel="noreferrer">
                         <span className="sr-only">{item.name}</span>
                         {item.icon}
                       </a>
                     </li>
                  )
                })} 
              </ul>
              <a className="block text text-gray-500 mt-4 underline" href="https://drive.google.com/drive/folders/1aR1TJX8Hl9neEOsdcHBaDU8awWzGJEgV?usp=sharing" target="_blank" rel="noreferrer">Download Resume in PDF</a>
            </div>

            {/* Contact form */}
            <div className="py-10 px-6 sm:px-10 lg:col-span-2 xl:p-12 tracking-wider antialiased">
              <h3 className="text-lg font-bold text-gray-500">Send me a message</h3>
              <form ref={contactFormRef} onSubmit={onFormSubmit} className="mt-6 grid grid-cols-2 gap-y-6 sm:grid-cols-2 sm:gap-x-8">
                <div className="col-span-2 md:col-span-1">
                  <label htmlFor="first-name" className="block text-md font-bold text-gray-500">
                    Name
                  </label>
                  <div className="mt-1">
                    <input
                      type="text"
                      name="name"
                      id="name"
                      required={true}
                      className="block w-full shadow-sunken rounded-md py-3 px-4 font-semibold text-gray-600 bg-primary tracking-wider antialiased"
                    />
                  </div>
                </div>
                <div className="col-span-2 md:col-span-1">
                  <label htmlFor="email" className="block text-md font-bold text-gray-500">
                    Email
                  </label>
                  <div className="mt-1">
                    <input
                      id="email"
                      name="email"
                      type="email"
                      required={true}
                      autoComplete="email"
                      className="block w-full rounded-md py-3 px-4 font-semibold text-gray-600 shadow-sunken bg-primary tracking-wider antialiased"
                    />
                  </div>
                </div>
                <div className="col-span-2">
                  <div className="flex justify-between">
                    <label htmlFor="message" className="block text-md font-bold text-gray-500">
                      Message
                    </label>
                  </div>
                  <div className="mt-1">
                    <textarea
                      id="message"
                      name="message"
                      required={true}
                      className="block w-full rounded-md py-3 px-4 font-semibold text-gray-600 shadow-sunken bg-primary max-h-32 tracking-wider antialiased"
                      aria-describedby="message-max"
                      defaultValue={''}
                    />
                  </div>
                </div>
                <div className="col-span-2 flex items-center justify-center flex-grow m-auto w-56">
                  <Button
                    type="submit"
                    styling="buttonStyled"
                    disabled={loading}
                  >
                    { 
                    !loading ? 
                    <>
                      <span className="text-xl font-bold text-gray-200 mr-2 tracking-wider antialiased drop-shadow-md">
                        Send
                      </span>
                      <IoSend className="w-7 h-7"/>
                    </> : <FaCircleNotch className="w-7 h-7 animate-spin"/> }
                  </Button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
    </>
    )
}

const Button = ({
  type,
  path,
  onClick,
  ButtonType,
  surface,
  disabled,
  borderRadius,
  width,
  height,
  shape,
  styling,
  ...props}) => {
  return (
    <div className="w-full h-full">
    <svg className="hidden">
      <filter id="filter0_i_190_4" x="0" y="0" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
      <feFlood floodOpacity="0" result="BackgroundImageFix"/>
      <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
      <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
      <feOffset/>
      <feGaussianBlur stdDeviation="2.5"/>
      <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
      <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.43 0"/>
      <feBlend mode="normal" in2="shape" result="effect1_innerShadow_190_4"/>
      </filter>
    </svg>
    <button
           disabled={disabled}
           type={type}
           className={ClassNames("flex justify-center items-center shadow-protruding rounded-lg w-full h-auto transition-all ease-in-out duration-700 hover:scale-105 hover:drop-shadow-lg", shape === "circle" ? "aspect-square rounded-[50%]" : "")}>
        <span className={ClassNames("flex justify-center items-center w-full h-full py-3 shadow-sunken-dark bg-concave-dark rounded-lg antialiased iconInnerShadow font-medium", shape === "circle" ? "rounded-[50%]" : "")}>{props.children}
         </span>
    </button>
    </div>
  )
}